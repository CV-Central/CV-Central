        @{
    var pictureUrl = ViewBag.PictureUrl as string;
}
@using System.Security.Claims;
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    @* Si hay un usuario que esta autenticado mostrar su nombre *@
    @if(User.Identity!.IsAuthenticated){
        @* Llamar el Claims que antes habia definido dentro de ClaimTypes, que fue el nombre en la función LogIn y devolverlo con Select *@
        <h1 class="display-4">Bienvenido
        @User.Claims.Where(c => c.Type == ClaimTypes.Name).Select(c => c.Value).SingleOrDefault()
        </h1>

        

@if (!string.IsNullOrEmpty(pictureUrl))
{
    <img src="@pictureUrl" alt="Profile Picture" />
}
else
{
    <p>No profile picture available.</p>
}
    }
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@* @{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div> *@
@{
    var user = (ClaimsPrincipal)User;
    var email = user.FindFirst(ClaimTypes.Email)?.Value;
}

<p>Correo electrónico: @User.Claims.Where(c => c.Type == ClaimTypes.Email).Select(c => c.Value).SingleOrDefault()</p>